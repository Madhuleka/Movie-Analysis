certificate = c(certificate, "-")
}
else
{
certificate = c(certificate, html_text())
}
}
}
or(i in seq(from = 1, to = 1000, by = 250))
{
for(i in (1:1000))
{
if((doc %>% html_nodes(".certificate") %>% html_text()) == " ")
{
certificate = c(certificate, "-")
}
else
{
certificate = c(certificate, html_text())
}
}
}
certificate = c()
for(i in seq(from = 1, to = 1000, by = 250))
{
for(i in (1:1000))
{
if(doc %>% html_node(".certificate") %>% html_text() == " ")
{
certificate = c(certificate, "-")
}
else
{
certificate = c(certificate, html_text())
}
}
}
certificate = c()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
for(i in (1:1000))
{
if(doc %>% html_nodes(".certificate") %>% html_text() == " ")
{
certificate = c(certificate, "-")
}
else
{
certificate = c(certificate, html_text())
}
}
}
certificate = c()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
for(i in (1:1000))
{
if(doc %>% html_node(".certificate") %>% html_text() == " ")
{
certificate = c(certificate, "-")
}
else
{
certificate = c(certificate, html_text())
}
}
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(), Certificate = doc%>%
html_nodes(".text-muted certificate") %>% html_text()
))
}
or(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(), Certificate = doc%>%
html_nodes(".text-muted p certificate") %>% html_text()
))
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(), Certificate = doc%>%
html_nodes(".text-muted span certificate") %>% html_text()
))
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(), Certificate = doc%>%
html_nodes(".lister-item-content .certificate") %>% html_text()
))
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
if(doc%>% html_nodes(".certificate") %>% html_text() == " ")
{
certificate = c(certificate, "-")}
else
{ certificate = c(certificate, html_text())}
}
imdb_1.find('span', class_ = 'certificate')
doc.find('span', class_ = 'certificate')
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate span") %>%
html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate")))
)))
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate span") %>%
html_text()),rep(NA, 250-length(doc %>% html_nodes(".certificate")))
))
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>%
html_text()),rep(NA, 250-length(doc %>% html_nodes(".certificate")))
))
}
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>%
html_text()),rep(NA, 250-length(doc %>% html_nodes(".certificate")))
))
}
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>%
html_text()),rep(NA, 250-length(doc %>% html_nodes(".certificate")))
))
}
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>%
html_text()),rep(NA, 250-length(doc %>% html_nodes(".certificate")))))
}
#######
#This R program scraps data from the IMDb website and saves it in a the form
#of a csv file.
########
# Package names
packages <- c("ggplot2", "readr", "dplyr", "tidyverse", "rvest", "knitr", "xml2")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE)
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text()),rep(NA, 250-length(doc %>% html_nodes(".certificate")))))
}
View(Movie_Dataframe)
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate")))))
}
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
View(Movie_Dataframe)
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-header a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
View(Movie_Dataframe)
movie_csv <- write.csv(Movie_Dataframe, "./movie_data.csv", row.names = FALSE)
movie_data <- read.csv("movie_data.csv")
C_A = 0
C_U = 0
C_R = 0
C_UA = 0
C_UA13=0
C_12 = 0
C_PG = 0
for(element in movie_data$Certificate) {
if(element == "A" || element == "18") {
C_A = C_A + 1}
if(element == "U") {
C_U = C_U + 1}
if(element == "R") {
C_R = C_R + 1}
if(element == "UA" || element == "7" ) {
C_UA = C_UA + 1}
if(element == "UA13+" || element == "13") {
C_UA13 = C_UA13 + 1}
if(element == "12+") {
C_12 = C_12 + 1}
if(element == "PG" || element == "G") {
C_PG = C_PG + 1}
}
Certificate <- c("A", "U", "R", "UA", "UA13", "12", "PG")
Frequency <- c(C_A, C_U, C_R, C_UA, C_UA13, C_12, C_PG)
barplot(Frequency, names.arg = Certificate, xlab = "Certificate", ylab = "Frequency")
ggplot(movie_data, mapping = aes(x=Runtime, y=Rating)) +  geom_point()
ggplot(movie_data, mapping = aes(x=Rating, y=Genre)) +  geom_point()
Count_1 = 0
Count_2 = 0
Count_3 = 0
Count_4 = 0
Count_5 = 0
Count_6 = 0
Count_7 = 0
Count_8 = 0
Count_9 = 0
Count_10 = 0
Count_11 = 0
for(element in movie_data$Genre)
{
y = unlist(strsplit(element,","))
if(str_contains(y, c("Action","War","Adventure"),ignore.case = TRUE,logic = "or"))
Count_1=Count_1+1
if(str_contains(y, c("Drama","Family"),ignore.case = TRUE,logic = "or"))
Count_2 = Count_2 + 1
if(str_contains(y, c("Fantasy","Sci-Fi"),ignore.case = TRUE,logic = "or"))
Count_3 = Count_3 + 1
if(str_contains(y, c("Crime","Mystery","Thriller"),ignore.case = TRUE,logic = "or"))
Count_4 = Count_4 + 1
if(str_contains(y, "Biography",ignore.case = TRUE,logic = "or"))
Count_5 = Count_5 + 1
if(str_contains(y, c("Comedy","Romance"),ignore.case = TRUE,logic = "or"))
Count_6 = Count_6 + 1
if(str_contains(y, "Horror",ignore.case = TRUE,logic = "or"))
Count_7 = Count_7 + 1
}
genre_names<-c("Adventure,War,Action","Drama,Family","Fantasy,Sci-fi","Crime,Mystery,Thriller","Biography","Comedy,Romance","Horror")
genre_count<-c(Count_1,Count_2,Count_3,Count_4,Count_5,Count_6,Count_7)
barplot(genre_count,names.arg=genre_names,xlab="Genre",ylab="Count",col="blue",
main="Genre chart")
pie(genre_count, genre_names, radius = 1, main = "Genre Chart")
Count_less8.5 = 0
Count_less9 = 0
Count_less9.5 = 0
Count_less10 = 0
for(element in movie_data$Rating)
{
if(element < 8.5)
Count_less8.5 = Count_less8.5+1
if(element >= 8.5 & element < 9)
Count_less9 = Count_less9+1
if(element >= 9 & element < 9.5)
Count_less9.5 = Count_less9.5+1
if(element >= 9.5)
Count_less10 = Count_less10+1
}
Rating_list <- c(Count_less8.5, Count_less9, Count_less9.5, Count_less10)
Rating_name <- c("Less than 8.5", "Between 8.5 and 9", "Between 9 and 9.5", "Greater than 9,5")
pie(Rating_list, Rating_name, radius = 1, main = "Rating Chart")
Movie_Dataframe
View(Movie_Dataframe)
Movie_Dataframe
Movie_Dataframe
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-content h3 a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
#######
#This R program scraps data from the IMDb website and saves it in a the form
#of a csv file.
########
# Package names
packages <- c("ggplot2", "readr", "dplyr", "tidyverse", "rvest", "knitr", "xml2")
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE)
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-content h3 a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
Movie_Dataframe
View(Movie_Dataframe)
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-content h3 a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes("lister-item-content p .genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
movie_csv <- write.csv(Movie_Dataframe, "./movie_data.csv", row.names = FALSE)
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-content h3 a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=doc %>% html_nodes(".genre") %>% html_text(),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
Movie_Dataframe
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-content h3 a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=gsub("[\n]", "", doc %>% html_nodes(".genre") %>% html_text()),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
Movie_Dataframe
movie_csv <- write.csv(Movie_Dataframe, "./movie_data.csv", row.names = FALSE)
View(Movie_Dataframe)
for(element in movie_data$Genre)
{
y = unlist(strsplit(element,","))}
y
Movie_Dataframe = data.frame()
for(i in seq(from = 1, to = 1000, by = 250))
{
url <- paste0("https://www.imdb.com/search/title/?groups=top_1000&sort=user_rating,desc&count=250&start=", i, "&ref_=adv_nxt")
doc <- read_html(url)
Movie_Dataframe = rbind(Movie_Dataframe, data.frame(Name = doc %>% html_nodes(".lister-item-content h3 a") %>% html_text(),
Rating=doc %>% html_nodes(".ratings-imdb-rating strong") %>% html_text(),
Runtime=parse_number(doc %>% html_nodes(".runtime") %>% html_text()),
Genre=gsub("[\n]", "", doc %>% html_nodes(".genre") %>% html_text()),
Certificate=c(doc %>% html_nodes(".certificate") %>% html_text(),rep(NA, 250-length(doc %>% html_nodes(".certificate"))))))
}
movie_csv <- write.csv(Movie_Dataframe, "./movie_data.csv", row.names = FALSE)
movie_data <- read.csv("movie_data.csv")
for(element in movie_data$Genre)
{
y = unlist(strsplit(element,","))}
y
Count_1 = 0
Count_2 = 0
Count_3 = 0
Count_4 = 0
Count_5 = 0
Count_6 = 0
Count_7 = 0
Count_8 = 0
Count_9 = 0
Count_10 = 0
Count_11 = 0
for(element in movie_data$Genre)
{
y = unlist(strsplit(element,","))
if(str_contains(y, c("Action","War","Adventure"),ignore.case = TRUE,logic = "or"))
Count_1=Count_1+1
if(str_contains(y, c("Drama","Family"),ignore.case = TRUE,logic = "or"))
Count_2 = Count_2 + 1
if(str_contains(y, c("Fantasy","Sci-Fi"),ignore.case = TRUE,logic = "or"))
Count_3 = Count_3 + 1
if(str_contains(y, c("Crime","Mystery","Thriller"),ignore.case = TRUE,logic = "or"))
Count_4 = Count_4 + 1
if(str_contains(y, "Biography",ignore.case = TRUE,logic = "or"))
Count_5 = Count_5 + 1
if(str_contains(y, c("Comedy","Romance"),ignore.case = TRUE,logic = "or"))
Count_6 = Count_6 + 1
if(str_contains(y, "Horror",ignore.case = TRUE,logic = "or"))
Count_7 = Count_7 + 1
}
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE)
packages <- c("ggplot2", "readr", "dplyr", "tidyverse", "rvest", "knitr", "xml2", "sjmisc")
Count_1 = 0
Count_2 = 0
Count_3 = 0
Count_4 = 0
Count_5 = 0
Count_6 = 0
Count_7 = 0
Count_8 = 0
Count_9 = 0
Count_10 = 0
Count_11 = 0
for(element in movie_data$Genre)
{
y = unlist(strsplit(element,","))
if(str_contains(y, c("Action","War","Adventure"),ignore.case = TRUE,logic = "or"))
Count_1=Count_1+1
if(str_contains(y, c("Drama","Family"),ignore.case = TRUE,logic = "or"))
Count_2 = Count_2 + 1
if(str_contains(y, c("Fantasy","Sci-Fi"),ignore.case = TRUE,logic = "or"))
Count_3 = Count_3 + 1
if(str_contains(y, c("Crime","Mystery","Thriller"),ignore.case = TRUE,logic = "or"))
Count_4 = Count_4 + 1
if(str_contains(y, "Biography",ignore.case = TRUE,logic = "or"))
Count_5 = Count_5 + 1
if(str_contains(y, c("Comedy","Romance"),ignore.case = TRUE,logic = "or"))
Count_6 = Count_6 + 1
if(str_contains(y, "Horror",ignore.case = TRUE,logic = "or"))
Count_7 = Count_7 + 1
}
genre_names<-c("Adventure,War,Action","Drama,Family","Fantasy,Sci-fi","Crime,Mystery,Thriller","Biography","Comedy,Romance","Horror")
genre_count<-c(Count_1,Count_2,Count_3,Count_4,Count_5,Count_6,Count_7)
barplot(genre_count,names.arg=genre_names,xlab="Genre",ylab="Count",col="blue",
main="Genre chart")
pie(genre_count, genre_names, radius = 1, main = "Genre Chart")
